package atongmu.atg;

import atongmu.util.*;
import java.util.*;
/*
 * A node can have a set of types which 
 * indicate it can also be a subtype of it's children's.
 */
public class NodeTypeEx extends Type{
	IntSet types = new IntSet();
	
	public NodeTypeEx(){
	
	}

	public NodeTypeEx(int typeID){
		this.addType(typeID);
	}

	public NodeTypeEx(List<Integer> ints){
		this.addTypes(ints);
	}

	public NodeTypeEx(String name){
		super(name);
	}

	public void addType(int typeID){
		types.add (typeID);
	}

	public void reset(){
		types.removeAll();
	}

	public void addTypes (List<Integer> l){
		for (int i=0;i<l.size();i++)
			types.add(l.get(i));
	}

	public boolean isSubtype (int typeID){
		return types.contains(typeID);
	}

	public String toString(){
		Iterator<Integer> it = types.iterator();
		StringBuffer sb = new StringBuffer();
		sb.append("@type->{");
		while (it.hasNext())
			sb.append(it.next()+",");
		sb.append("}");
		return sb.toString();
	}

}
